using System;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Media;
using System.Windows.Media.Animation;

namespace MalwareDetection
{
    public class CustomNotification
    {
        private readonly Window _notificationWindow;
        private readonly TextBlock _titleLabel;
        private readonly TextBlock _messageLabel;
        private readonly Button _closeButton;

        public CustomNotification(string title, string message)
        {
            // Create a new window for the notification
            _notificationWindow = new Window
            {
                Width = 300,
                Height = 100,
                WindowStyle = WindowStyle.None,
                ResizeMode = ResizeMode.NoResize,
                Background = Brushes.Transparent,
                AllowsTransparency = true,
                ShowInTaskbar = false,
                Topmost = true
            };

            // Title
            _titleLabel = new TextBlock
            {
                Text = title,
                FontWeight = FontWeights.Bold,
                Margin = new Thickness(10, 10, 10, 0),
                FontSize = 16,
                Foreground = Brushes.Black
            };

            // Message
            _messageLabel = new TextBlock
            {
                Text = message,
                Margin = new Thickness(10, 5, 10, 0),
                FontSize = 14,
                Foreground = Brushes.DarkGray
            };

            // Close button
            _closeButton = new Button
            {
                Content = "X",
                Margin = new Thickness(100, 0, 10, 0),
                HorizontalAlignment = HorizontalAlignment.Right,
                Background = Brushes.Transparent,
                Foreground = Brushes.Red,
                BorderBrush = Brushes.Transparent,
                Padding = new Thickness(5)
            };
            _closeButton.Click += (sender, e) => Close();

            // Add controls to the window
            _notificationWindow.Content = new Grid
            {
                Background = Brushes.White,
                Children =
                {
                    new Border
                    {
                        Background = Brushes.LightGray,
                        CornerRadius = new CornerRadius(5),
                        Margin = new Thickness(5),
                        Child = new StackPanel
                        {
                            Margin = new Thickness(10),
                            Children =
                            {
                                new StackPanel
                                {
                                    Orientation = Orientation.Horizontal,
                                    HorizontalAlignment = HorizontalAlignment.Stretch,
                                    Children =
                                    {
                                        _titleLabel,
                                        _closeButton
                                    }
                                },
                                _messageLabel
                            }
                        }
                    }
                }
            };
        }


        public async void Show()
        {
            // Set the position to the right side of the desktop
            _notificationWindow.Left = SystemParameters.WorkArea.Right - _notificationWindow.Width;
            _notificationWindow.Top = SystemParameters.WorkArea.Bottom - _notificationWindow.Height;

            _notificationWindow.Show();

            // Animate opacity
            var animation = new DoubleAnimation
            {
                From = 0.0,
                To = 1.0,
                Duration = TimeSpan.FromSeconds(0.5)
            };

            _notificationWindow.BeginAnimation(Window.OpacityProperty, animation);

            // Close after 5 seconds
            await Task.Delay(7000);

            // Animate opacity
            animation = new DoubleAnimation
            {
                From = 1.0,
                To = 0.0,
                Duration = TimeSpan.FromSeconds(0.5)
            };

            _notificationWindow.BeginAnimation(Window.OpacityProperty, animation);

            // Wait for the animation to complete
            await Task.Delay(500);

            Close();
        }

        public void Close()
        {
            _notificationWindow.Close();
        }
    }
}